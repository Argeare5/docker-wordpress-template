services:
  # Nginx Reverse Proxy Service
  nginx_proxy:
    image: nginxproxy/nginx-proxy:latest # Using the current nginx-proxy image
    container_name: ${PROD_PROJECT_NAME}_nginx_proxy # Container name from .env
    restart: always
    ports:
      - "80:80"   # HTTP
      - "443:443" # HTTPS
    volumes:
      - prod_certs_data:/etc/nginx/certs:ro # SSL certificates (read-only for nginx)
      - prod_vhost_data:/etc/nginx/vhost.d # Virtual host configurations
      - prod_html_data:/usr/share/nginx/html # For static files and ACME challenges
      - /var/run/docker.sock:/tmp/docker.sock:ro # Access to Docker API for container discovery
    networks:
      - wordpress_prod_network
    depends_on: # Although nginx-proxy can start independently, dependencies can be specified for clarity
      - wordpress_prod # If wordpress_prod should be available when the proxy starts

  # Let's Encrypt ACME Companion Service
  acme_companion:
    image: nginxproxy/acme-companion:latest # Using the current companion image for Let's Encrypt
    container_name: ${PROD_PROJECT_NAME}_acme_companion # Container name from .env
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Access to Docker API
      - prod_certs_data:/etc/nginx/certs:rw # Read/write access to certificates
      - prod_vhost_data:/etc/nginx/vhost.d:rw # Read/write access for ACME challenge configurations
      - prod_html_data:/usr/share/nginx/html:rw # Read/write access for ACME challenge files
    environment:
      # Email for Let's Encrypt notifications (e.g., about certificate expiration)
      DEFAULT_EMAIL: ${PROD_LETSENCRYPT_EMAIL} # From .env file
      # Specify which nginx-proxy container to use
      NGINX_PROXY_CONTAINER: ${PROD_PROJECT_NAME}_nginx_proxy
    depends_on:
      - nginx_proxy # Should start after or along with nginx_proxy
    networks:
      - wordpress_prod_network

  # Production Database Service
  db_prod:
    image: mysql:8.0
    container_name: ${PROD_PROJECT_NAME}_db
    restart: always
    volumes:
      - prod_db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${PROD_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${PROD_MYSQL_DATABASE}
      MYSQL_USER: ${PROD_MYSQL_USER}
      MYSQL_PASSWORD: ${PROD_MYSQL_PASSWORD}
    networks:
      - wordpress_prod_network

  # Production WordPress Service
  wordpress_prod:
    build:
      context: .
      args:
        WORDPRESS_IMAGE_TAG: php8.2-apache
    container_name: ${PROD_PROJECT_NAME}_wordpress
    restart: always
    depends_on:
      - db_prod
    volumes:
      - ./wp-content:/var/www/html/wp-content
      - ./config/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    environment:
      WORDPRESS_DB_HOST: db_prod:3306
      WORDPRESS_DB_USER: ${PROD_MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${PROD_MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: ${PROD_MYSQL_DATABASE}
      WORDPRESS_TABLE_PREFIX: ${PROD_WORDPRESS_TABLE_PREFIX:-wp_}
      WORDPRESS_DEBUG: ${PROD_WORDPRESS_DEBUG:-0}
      WP_ENVIRONMENT_TYPE: ${PROD_WP_ENV:-production}
      WORDPRESS_CONFIG_EXTRA: |
        ${PROD_WORDPRESS_CONFIG_EXTRA}
      # Variables for nginx-proxy and acme-companion
      VIRTUAL_HOST: ${PROD_DOMAIN_NAME},www.${PROD_DOMAIN_NAME} # Your domain and www-subdomain from .env
      VIRTUAL_PORT: 80 # WordPress inside the container listens on port 80
      LETSENCRYPT_HOST: ${PROD_DOMAIN_NAME},www.${PROD_DOMAIN_NAME} # Domains for the SSL certificate
      LETSENCRYPT_EMAIL: ${PROD_LETSENCRYPT_EMAIL} # Email for this specific host (can use DEFAULT_EMAIL from acme_companion)

      # WordPress Salts
      AUTH_KEY: ${PROD_AUTH_KEY}
      SECURE_AUTH_KEY: ${PROD_SECURE_AUTH_KEY}
      LOGGED_IN_KEY: ${PROD_LOGGED_IN_KEY}
      NONCE_KEY: ${PROD_NONCE_KEY}
      AUTH_SALT: ${PROD_AUTH_SALT}
      SECURE_AUTH_SALT: ${PROD_SECURE_AUTH_SALT}
      LOGGED_IN_SALT: ${PROD_LOGGED_IN_SALT}
      NONCE_SALT: ${PROD_NONCE_SALT}
    networks:
      - wordpress_prod_network

  phpmyadmin_prod:
    image: phpmyadmin/phpmyadmin:latest
    container_name: ${PROD_PROJECT_NAME}_phpmyadmin
    restart: unless-stopped
    depends_on:
      - db_prod
    environment:
      PMA_HOST: db_prod
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${PROD_MYSQL_ROOT_PASSWORD}
      UPLOAD_LIMIT: ${PROD_PHPMYADMIN_UPLOAD_LIMIT:-1G}
      VIRTUAL_HOST: pma.${PROD_DOMAIN_NAME}
      VIRTUAL_PORT: 80
      LETSENCRYPT_HOST: pma.${PROD_DOMAIN_NAME}
      LETSENCRYPT_EMAIL: ${PROD_LETSENCRYPT_EMAIL}
      HTPASSWD_USER: ${PROD_PHPMYADMIN_AUTH_USER} # User for Basic Auth from .env
      HTPASSWD_PASS: ${PROD_PHPMYADMIN_AUTH_PASS} # Password for Basic Auth from .env
    networks:
      - wordpress_prod_network

# Named volumes for persistent data storage on the server
volumes:
  prod_db_data: {} # Persists database data for db_prod
  prod_certs_data: {} # New volume for SSL certificates
  prod_vhost_data: {} # New volume for nginx vhost configurations
  prod_html_data: {}  # New volume for nginx static files (used by acme-companion)

# Custom Docker network for production services
networks:
  wordpress_prod_network:
    driver: bridge